from logic import ローレシアの王子の名前テーブル

#**
#* サマルトリアの王子の名前テーブル。
#*/
サマルトリアの王子の名前table = [
	"ランド",
	"カイン",
	"アーサー",
	"コナン",
	"クッキー",
	"トンヌラ",
	"すけさん",
	"パウロ"
]

#**
#* ムーンブルクの王女の名前テーブル。
#*/
ムーンブルクの王女の名前table = [
	"アイリン",
	"マリア",
	"ナナ",
	"あきな",
	"プリン",
	"まいこ",
	"リンダ",
	"サマンサ"
]

#**
#* ローレシアの王子の名前から構築可能なサマルトリアの王子・ムーンブルクの王女の
#* 名前。
#* http://msx.s58.xrea.com/hpd2v2.htm
#*/
class SamarutoriaMuunburukuName:
	#**
	#* ローレシアの王子の名前から情報を構築。
	#* @param name ローレシアの王子の名前
	#*/
	def __init__(self, name):
		#**
		#* ローレシアの王子の名前のコード変換用テーブル。
		#*/
		self.table = ローレシアの王子の名前テーブル.hashmap

		# 1～4文字目の合計値をAとする。
		a = self.table[name[0]] + self.table[name[1]] + self.table[name[2]] + self.table[name[3]]

		# 2～4文字目の合計値をBとする。
		b = self.table[name[1]] + self.table[name[2]] + self.table[name[3]]

		# Bの値が256以上の場合はAの値に1を足す。
		# Bの値が255以下の場合はそのまま。
		if b >= 256:
			a += 1

		# Aを64で割り，余りをCとする。
		c = a % 64

		# Cのビット5～3の値でサマルトリアの王子の名前が決定する。
		self.サマルトリアの王子の名前 = サマルトリアの王子の名前table[(c & 0x38) // 8]

		# Cのビット2～0の値でムーンブルクの王女の名前が決定する。
		self.ムーンブルクの王女の名前 = ムーンブルクの王女の名前table[(c & 0x07)]
